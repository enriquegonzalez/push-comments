// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//
//= require angular
//= require angular-resource
//= require angular-route
//= require jquery
//= require jquery_ujs
//= require turbolinks
//= require_tree .

var notifications = angular.module('notifications', ['ngRoute', 'ngResource']);

// ROUTES
notifications.config(function($httpProvider, $routeProvider) {
  $httpProvider.defaults.headers.common['X-CSRF-Token'] = document.querySelector('meta[name=csrf-token]').content;
  $routeProvider
  .when('/', {
    templateUrl: '/assets/dashboard.html',
    controller: 'PostsCtrl'
  })
  .when('/post/:id', {
    templateUrl: '/assets/post.html',
    controller: 'PostDetailCtrl'
  })
  .when('/post/:post_id/comments', {
    templateUrl: '/assets/comments.html',
    controller: 'CommentsCtrl'
  })
  .otherwise({
    redirectTo: '/'
  });
});

// FACTORIES
notifications.factory('Posts', function($resource) {
  return $resource("/posts/:id.json", {id: '@id'});
});

notifications.factory('Comments', function($resource) {
  return $resource("/posts/:post_id/comments/:comment_id.json", {id: '@post_id'});
});


// CONTROLLERS
notifications.controller('PostsCtrl', function($scope, Posts){
  $scope.posts = Posts.query();
});

notifications.controller('PostDetailCtrl', function($scope,$routeParams, Posts){
  $scope.post = Posts.get({id: $routeParams.id});

});

notifications.controller('CommentsCtrl', function($scope,$routeParams, Comments){
  $scope.comments = Comments.query({post_id: $routeParams.post_id});
  console.log($scope.comments)
});


// PUSH NOTIFICATIONS
var pusher = new Pusher('bfe99c4616e3ab56267c');
var channel = pusher.subscribe('comments_channel');
    // channel.bind('new_comment', function(data) {
    //   $scope.comments.push(data);
    //   $scope.$apply();
    // });

    channel.bind('new_comment', function(data) {
      $scope.comments = Comments.query();
      $scope.numNewComments =
      $scope.$apply();
    });

